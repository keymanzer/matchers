<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.kosa.community.mapper.CommunityBoardMapper">

    <resultMap id="usersMap" type="kr.or.kosa.user.dto.Users">
        <id property="userId" column="USER_ID"/>
        <result property="email" column="EMAIL"/>
        <result property="nickname" column="NICKNAME"/>
    </resultMap>
    
	<resultMap id="boardMap" type="kr.or.kosa.board.dto.Board">
	    <id property="postId" column="POST_ID"/>
	    <result property="title" column="TITLE"/>
	    <result property="content" column="CONTENT"/>
	    <result property="createdAt" column="CREATED_AT"/>
	    <result property="userNickname" column="USER_NICKNAME"/>
	    <result property="userId" column="USERID"/>	
	</resultMap>

    <resultMap id="attachedFileMap" type="kr.or.kosa.attachedFile.dto.AttachedFile">
	    <id property="attachedFileId" column="ATTACHED_FILE_ID"/>
	    <result property="name" column="NAME"/>
	    <result property="path" column="PATH"/>
	    <result property="postId" column="POST_ID"/>
	</resultMap>

    <resultMap id="communityBoardMap" type="kr.or.kosa.community.dto.CommunityBoard">
        <id property="postId" column="POST_ID" />
        <result property="createdAt" column="CREATED_AT"/>
        <result property="lastUpdatedAt" column="LAST_UPDATED_AT"/>
        <result property="views" column="VIEWS"/>
	    <result property="userNickname" column="USER_NICKNAME"/>
	    <result property="userId" column="USERID"/>
	    <result property="attachedFileExists" column="ATTACHED_FILE_EXISTS"/>
	    <result property="filePath" column="FILE_PATH"/>
        <association property="board" resultMap="boardMap"/>
        <association property="users" resultMap="usersMap"/>
        <collection property="attachedFiles" ofType="kr.or.kosa.attachedFile.dto.AttachedFile">
	    <id property="attachedFileId" column="ATTACHED_FILE_ID"/>
	    <result property="name" column="NAME"/>
	    <result property="path" column="PATH"/>
	    <result property="postId" column="ATTACHED_POST_ID"/>
		</collection>
    </resultMap>

    <select id="getPostList" resultMap="communityBoardMap">
		SELECT 
		    b.POST_ID, 
		    b.TITLE, 
		    b.CONTENT, 
		    b.CREATED_AT, 
		    b.USERID,
		    u.NICKNAME,
		    cb.LAST_UPDATED_AT, 
		    cb.VIEWS,
		    (CASE WHEN a.NAME IS NOT NULL THEN 1 ELSE 0 END) AS ATTACHED_FILE_EXISTS
		FROM BOARD b
		LEFT JOIN COMMUNITY_BOARD cb ON b.POST_ID = cb.POST_ID
		LEFT JOIN USERS u ON b.USERID = u.USER_ID
		LEFT JOIN ATTACHED_FILE a ON b.POST_ID = a.POST_ID
		WHERE cb.POST_ID = b.POST_ID
		ORDER BY b.POST_ID DESC
    </select>
    
    <select id="getPostListByViews" resultMap="communityBoardMap">
		SELECT 
		    b.POST_ID, 
		    b.TITLE, 
		    b.CONTENT, 
		    b.CREATED_AT, 
		    b.USERID,
		    u.NICKNAME,
		    cb.LAST_UPDATED_AT, 
		    cb.VIEWS,
		    (CASE WHEN af.PATH IS NOT NULL THEN 1 ELSE 0 END) AS ATTACHED_FILE_EXISTS,
		    af.PATH AS FILE_PATH
		FROM BOARD b
		LEFT JOIN COMMUNITY_BOARD cb ON b.POST_ID = cb.POST_ID
		LEFT JOIN USERS u ON b.USERID = u.USER_ID
		LEFT JOIN (
		    SELECT 
		        a.POST_ID, 
		        MIN(a.PATH) AS PATH
		    FROM ATTACHED_FILE a
		    GROUP BY a.POST_ID
		) af ON b.POST_ID = af.POST_ID
		WHERE cb.POST_ID = b.POST_ID
		ORDER BY cb.VIEWS DESC
	</select>

    <select id="getPostbyId" parameterType="Long" resultMap="communityBoardMap">
		SELECT 
		    b.POST_ID, 
		    b.TITLE, 
		    b.CONTENT, 
		    b.CREATED_AT, 
		    b.USERID,
		    u.EMAIL,
		    u.NICKNAME,
		    cb.LAST_UPDATED_AT, 
		    cb.VIEWS,
		    a.ATTACHED_FILE_ID,
		    a.NAME,
		    a.PATH,
		    a.POST_ID AS ATTACHED_POST_ID
		FROM BOARD b
		LEFT JOIN COMMUNITY_BOARD cb ON b.POST_ID = cb.POST_ID
		LEFT JOIN USERS u ON b.USERID = u.USER_ID
		LEFT JOIN ATTACHED_FILE a ON b.POST_ID = a.POST_ID
		WHERE cb.POST_ID = b.POST_ID AND cb.POST_ID = #{postId}
    </select>
	
	<insert id="insertPost" parameterType="kr.or.kosa.community.dto.CommunityBoard">
		<selectKey order="BEFORE" keyProperty="postId" resultType="Long">
			SELECT BOARD_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT ALL
		INTO BOARD (POST_ID, TITLE, CONTENT, CREATED_AT, USER_NICKNAME, USERID)
		VALUES (#{postId}, #{title}, #{content}, SYSDATE, #{userNickname}, #{userId})
		INTO COMMUNITY_BOARD (POST_ID, LAST_UPDATED_AT, VIEWS)
		VALUES(#{postId}, SYSDATE, 0)
		SELECT * FROM DUAL		
	</insert>

	<update id="updatePost" parameterType="kr.or.kosa.community.dto.CommunityBoard">
		UPDATE COMMUNITY_BOARD 
		SET 
		    LAST_UPDATED_AT = SYSDATE
		WHERE POST_ID = #{postId}
	</update>
	
	<update id="increaseViewCount" parameterType="Long">
	    UPDATE COMMUNITY_BOARD
	    SET 
	    	VIEWS = VIEWS + 1
	    WHERE POST_ID = #{postId}
	</update>

	<delete id="deletePost" parameterType="Long">
	    DELETE FROM COMMUNITY_BOARD
	    WHERE POST_ID = #{postId}
	</delete>
	

	
</mapper>